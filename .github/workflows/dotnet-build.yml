name: .NET Core Build and SonarQube Analysis
on:
  push:
    branches: [ main ]
jobs:
  sonarqube_analysis:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Cache SonarQube packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        id: cache-sonar-scanner
        uses: actions/cache@v2
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner-${{ hashFiles('**/*.cs') }}
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarQube scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
          
      - name: Build and analyze
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"CIAppTest" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}"
          dotnet build
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  dotnet_build:
    needs: sonarqube_analysis
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout code

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run tests
        run: dotnet test --logger "trx;LogFileName=test_results.trx" ./CITestApp.Tests/CITestApp.Tests.csproj

      - name: Publish Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: '**/TestResults/*.trx'
    
      - name: Publish Reports to Nexus
        run: |
            for file in test-results/*.trx; do
              curl -u ${{ secrets.NEXUS_USERNAME }}:${{ secrets.NEXUS_PASSWORD }} -T "$file" http://18.134.9.1:8081/repository/maven-releases/group/artifact/version/$(basename "$file")
            done
        env:
            NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
            NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}